CREATE TABLE IF NOT EXISTS PUBLIC.users(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    birthday DATE,
    login VARCHAR,
    name VARCHAR,
    email VARCHAR
    CONSTRAINT birthday_not_in_future CHECK (birthday < CAST(NOW() AS DATE))
);

CREATE TABLE IF NOT EXISTS PUBLIC.mpa_type(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR
);

CREATE TABLE IF NOT EXISTS PUBLIC.film(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR(200),
    releaseDate DATE,
    duration INTEGER,
    mpaId BIGINT REFERENCES mpa_type (id),
    CONSTRAINT positive_number CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS PUBLIC.genre(
   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name VARCHAR
);

CREATE TABLE IF NOT EXISTS PUBLIC.friends_status(
    friend_one_id BIGINT REFERENCES users (id),
    friend_two_id BIGINT REFERENCES users (id),
    status INTEGER NOT NULL,
    CONSTRAINT unique_friend_pair UNIQUE(friend_one_id, friend_two_id)

);

CREATE TABLE IF NOT EXISTS PUBLIC.likes(
    filmId BIGINT REFERENCES film (id),
    userId BIGINT NULL
    CONSTRAINT userId REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.film_genre(
    filmId BIGINT REFERENCES film (id),
    genreId INTEGER REFERENCES genre (id),
    CONSTRAINT unique_genre_pair UNIQUE (filmId, genreId)
);

---> add genres
INSERT INTO GENRE (NAME) VALUES ('Комедия');
INSERT INTO GENRE (NAME) VALUES ('Драма');
INSERT INTO GENRE (NAME) VALUES ('Мультфильм');
INSERT INTO GENRE (NAME) VALUES ('Триллер');
INSERT INTO GENRE (NAME) VALUES ('Документальный');
INSERT INTO GENRE (NAME) VALUES ('Боевик');

--SELECT * FROM FILM_GENRE;
---> add mpa
INSERT INTO MPA_TYPE (NAME) VALUES ( 'G' );
INSERT INTO MPA_TYPE (NAME) VALUES ( 'PG' );
INSERT INTO MPA_TYPE (NAME) VALUES ( 'PG-13' );
INSERT INTO MPA_TYPE (NAME) VALUES ( 'R' );
INSERT INTO MPA_TYPE (NAME) VALUES ( 'NC-17' );


